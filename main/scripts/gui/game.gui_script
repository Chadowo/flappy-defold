local hashes = require('main/modules/hashes')

function init(self)
	msg.post('.', 'acquire_input_focus')

	-- TODO: Make a root node
	self.nodes = {}
	table.insert(self.nodes, gui.get_node('score'))
	table.insert(self.nodes, gui.get_node('pause_button'))

	gui.set_text(gui.get_node('score'), 0)
	
	self.pause = false
end

local function pause_game(self)
	self.pause = not self.pause

	-- Handle the sprite used
	local pause_node = gui.get_node('pause_button')
	if self.pause then	
		gui.play_flipbook(pause_node, 'button_resume')
	else
		gui.play_flipbook(pause_node, 'button_pause')
	end

	msg.post('main:/controller#controller', 'pause', {self.pause})
end

local function disappear(self)
	for i, v in ipairs(self.nodes) do
		gui.animate(v, 'color.w', 0, gui.EASING_LINEAR, 0.3)
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hashes.SET_SCORE then
		local label = gui.get_node('score')
		gui.set_text(label, message[1])
	end

	if message_id == hashes.DISAPPEAR then
		disappear(self)
		msg.post('.', 'release_input_focus')
	end
end

function on_input(self, action_id, action)
	if action_id == hashes.FLAP_MOUSE and action.pressed then
		if gui.pick_node(gui.get_node('pause_button'), action.x, action.y) then
			pause_game(self)
			return true -- Consume input so clicking on the pause button
								-- won't make a flap
		end
	elseif action_id == hashes.ESCAPE or action_id == hashes.BACK then
		if action.pressed then
			pause_game(self)
			return true
		end
	end
end